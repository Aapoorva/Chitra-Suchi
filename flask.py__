#!/usr/bin/python3

from flask import Flask,render_template,Markup
import os
import mysql.connector as mysql
from plotly.offline import plot
from plotly.graph_objs import Scatter
import numpy as np
import datetime
 

#to define a methid that will have all the features of flask

app = Flask(__name__)

# defining routes
@app.route('/webpage')

# define a function at the background of website page that will run from web.html page of templates folder of current working folder
def web():
	return render_template('web.html')


#defining  route for python file
@app.route('/py')

#def a function in background of /py

def pythonfile():
	# run a specific python3 file in action
	os.system("python3 /home/bhavyaagrawal/computer_vision/real_time_image.py")
	# in order to avoid any error by returning something
	return "Image Taken Successfully"

@app.route("/table")
def create_table():

	conn = mysql.connect(user='bhavya',password='Bhavya1910',database='Enroll_Images',host='127.0.0.1')
	cursor = conn.cursor()

	if conn.is_connected():
		print("True")
	#return render_template("/db_tables.html")
	response = "<head><meta http-equiv='refresh' content='7'></head>"

	out = cursor.execute("SELECT * FROM Images")
		
	data = cursor.fetchall()
	#response += render_template('db_tables.html', rows=data)
	#print(response)
	# to send variable to html file using python flask
	#return render_template('db_tables.html', variable='123456')
	return render_template('db_tables.html', data=data)
	#return response

# below code will show student economy on graph page linking matplotlib with html page
@app.route("/showgraph")
def results():
	# create an empty list to be filled with the elements in future using np.append()
	date_list = []
	student_list = []
	conn1 = mysql.connect(user='bhavya',password='Bhavya1910',database='attendence',host='localhost')
	cursor1 = conn1.cursor(buffered=True)
	if conn1.is_connected():
		print("True")

	# fetch dates from database on to plot on x-axis	
	cursor1.execute("SELECT Distinct date from students")
	out1 = cursor1.fetchall()
	print(out1)
	for i in out1:
		date_list.append(i[0])
	print(date_list)

	# fetch total presence on specific date from database on to plot on y-axis	
	try :
		for i in date_list:
			cursor1.execute("SELECT count(rno) FROM students where date = '%s' " %i)
			total = cursor1.fetchall()
			print("total : ",total)
			# total returns a list of tuple
			student_list.append(str(total[0][0]))
			print("student list : ",student_list)
	except mysql.errors.InternalError as e:
		print(e)

	
	print(student_list)
	my_plot_div = plot([Scatter(x=date_list, y=student_list)], output_type='div')    	
	return render_template('graph.html',div_placeholder=Markup(my_plot_div))

# call the main app or starting of the application
if __name__ == "__main__":
#for allowing debugging on the browser itself use (debug = True)
	app.run(debug=True)






    






# to call css file in flask
#<link rel= "stylesheet" type= "text/css" href= "{{ url_for('static',filename='styles/mainpage.css') }}">
#Flask will now look for the css file under static/styles/mainpage.css
#to access a variable from flask file into html
#<!p>Here is my variable: {{ variable }}</p>
